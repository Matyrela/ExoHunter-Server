jobs:
  build-and-deploy-on-vps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Sync sources to VPS
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -az --delete
          path: .
          remote_path: /root/exoserver-src
          remote_host: ${{ secrets.VPS_HOST }}
          remote_user: ${{ secrets.VPS_USER }}
          remote_key: ${{ secrets.VPS_SSH_KEY }}

      - name: Build & rollout on VPS (nerdctl + kubectl)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -euo pipefail

            # 1) instalar nerdctl si no está
            if ! command -v nerdctl >/dev/null 2>&1; then
              curl -fsSL https://github.com/containerd/nerdctl/releases/download/v1.7.7/nerdctl-full-1.7.7-linux-amd64.tar.gz \
                | tar -C /usr/local -xz
              systemctl restart k3s || true
            fi

            cd /root/exoserver-src

            # 2) build en namespace k8s.io (donde k3s busca imágenes)
            TAG=${GITHUB_SHA}
            nerdctl -n k8s.io build -t exoserver:${TAG} -t exoserver:latest .

            # 3) aplicar manifests (por si hay cambios)
            KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl apply -f k8s/

            # 4) setear la imagen local (sin registry) y esperar rollout
            KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl -n exohunter set image \
              deploy/exoserver-deployment exoserver=exoserver:${TAG}

            KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl -n exohunter rollout status \
              deploy/exoserver-deployment --timeout=300s

            # mostrar estado
            KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl -n exohunter get pods -o wide
