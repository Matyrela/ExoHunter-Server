name: Exoserver â€” build & deploy on VPS

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Sync sources to VPS
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -az --delete
          path: .
          remote_path: /home/${{ secrets.VPS_USER }}/exoserver-src
          remote_host: ${{ secrets.VPS_HOST }}
          remote_user: ${{ secrets.VPS_USER }}
          remote_key: ${{ secrets.VPS_SSH_KEY }}

      - name: Build image and rollout in K3s
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          envs: GITHUB_SHA
          script: |
            set -euo pipefail
            USER=${USER:-${{ secrets.VPS_USER }}}

            # sockets correctos en k3s
            export CONTAINERD_ADDRESS=/run/k3s/containerd/containerd.sock
            export BUILDKIT_HOST=unix:///run/buildkit/buildkitd.sock

            cd ~/exoserver-src
            TAG="${GITHUB_SHA}"

            # build en el runtime de k3s (containerd) usando buildkit
            sudo nerdctl --address "$CONTAINERD_ADDRESS" -n k8s.io build \
              -t exoserver:${TAG} -t exoserver:latest .

            # aplicar manifests y actualizar deployment en el ns exohunter
            KUBECONFIG=/home/${USER}/.kube/config-exohunter kubectl apply -f k8s/
            KUBECONFIG=/home/${USER}/.kube/config-exohunter kubectl -n exohunter set image \
              deploy/exoserver-deployment exoserver=exoserver:${TAG}
            KUBECONFIG=/home/${USER}/.kube/config-exohunter kubectl -n exohunter rollout status \
              deploy/exoserver-deployment --timeout=300s
            KUBECONFIG=/home/${USER}/.kube/config-exohunter kubectl -n exohunter get pods -o wide
